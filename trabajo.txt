pointlight


sampling light
- luminaire sampling - next event estimation
sampling distance
- null collision - delta tracking
sampling transmittance
- la del punto de colisión - delta tracking

intersecting geometry
	- PLANO OCÉANO
	- BOUNDING BOX NUBE
		- MODELAR DENSIDAD RUIDO PERLIN
		- SDF DE MANERA QUE LA DENSIDAD ES MENOR CUANTO MÁS CERCA DEL BORDE
	- PUNTO DE LUZ ENCIMA DE LA NUBE


CÓMO HACERLO EN NORI
	- luz pointlight
	- nube prioritaria y dentro de fog
	- volúmenes encajetados
	- asumes que estás dentro de uno ya (por simplificar)
	- separados gemoetría rígida y media
	- hardcodeo al principio de estar en un medio
	- impactar con objetos normales: idéntico
	- si en niebla:
		- sampleo mean free path
		- y ya
	- si en caja nube:
		- si fuera de sdf se rechaza la colisión
		- si dentro:
			null collision - delta tracking etc

DATA STRUCTURES NORI
	- Medios
		Transmittance(xref, xp) // los dos puntos
	
		heredan:
		- Homogéneos:
			todo lo que devuelve respecto a coeficientes es constante
		- Heterogéneos:
			los coeficientes dependen de la posición
	- Media intersection:
		- Phase Function
		- dist
		- pdf
		- objeto intersectado
		- ... añadir conforme sea necesario
	- de alguna manera, que se pueda usar una mesh y una mesh procedural transparentemente (si es posible)
	- procedural mesh:
		- intersection: por spheremarching pero que devuelva la distancia rayo-objeto, no punto-objeto.
	- PhaseFunction: Como las BSDF pero con PhaseFunction y que pueda crear las mías. Lógicamente son otra cosa, así que si lo prefieres puedes hacer que PhaseFunction herede de BSDF pero con un comentario bien grande de que no son lo mismo xD. Probablemente haya que linkearle la mesh o proceduralmesh o lo que sea (quizás es mejor separar la parte procedural de coeficientes d ela mesh y añadir eso) para hacer el sample o eval
		- Eval
		- Sample
		- Pdf
